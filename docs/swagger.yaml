definitions:
  response.AddUserConceptQ:
    properties:
      concept_id:
        type: string
      user_id:
        type: integer
    required:
    - concept_id
    - user_id
    type: object
  response.AdvancedSearchQ:
    properties:
      asc:
        type: boolean
      conds:
        additionalProperties:
          type: string
        type: object
      page:
        type: integer
      query:
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      size:
        type: integer
      sort:
        type: integer
    type: object
  response.AuthorRelationNet:
    properties:
      edge_set:
        items:
          additionalProperties: true
          type: object
        type: array
      vertex_set:
        items:
          additionalProperties: true
          type: object
        type: array
    type: object
  response.BaseSearchQ:
    properties:
      asc:
        type: boolean
      conds:
        additionalProperties:
          type: string
        type: object
      kind:
        type: string
      page:
        type: integer
      queryWord:
        type: string
      size:
        type: integer
      sort:
        type: integer
    type: object
  response.CommentCreation:
    properties:
      content:
        type: string
      paper_id:
        type: string
      user_id:
        type: integer
    required:
    - content
    - paper_id
    - user_id
    type: object
  response.CommentListQuery:
    properties:
      paper_id:
        type: string
      user_id:
        type: integer
    required:
    - paper_id
    - user_id
    type: object
  response.CommentUser:
    properties:
      comment_id:
        type: integer
      user_id:
        type: integer
    required:
    - comment_id
    - user_id
    type: object
  response.CreateApplicationQ:
    properties:
      author_id:
        type: string
      author_name:
        type: string
      field:
        type: string
      institution_name:
        type: string
      user_id:
        type: integer
      work_email:
        type: string
    required:
    - author_id
    - author_name
    - field
    - institution_name
    - user_id
    - work_email
    type: object
  response.FollowAuthorQ:
    properties:
      author_id:
        type: string
      user_id:
        type: integer
    required:
    - author_id
    - user_id
    type: object
  response.GetUserFollowsQ:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  response.HandleApplicationQ:
    properties:
      application_id:
        type: integer
      content:
        description: 审批意见
        type: string
      success:
        description: 是否通过
        type: string
      user_id:
        type: integer
    required:
    - application_id
    - content
    - success
    - user_id
    type: object
  response.LoginQ:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.ModifyQ:
    properties:
      email:
        description: 邮箱
        type: string
      fields:
        description: 研究领域
        type: string
      name:
        description: 真实姓名
        type: string
      phone:
        description: 电话号码
        type: string
      user_id:
        type: string
      user_info:
        description: 个性签名
        type: string
    required:
    - user_id
    type: object
  response.PwdModifyQ:
    properties:
      password_new:
        minLength: 6
        type: string
      password_old:
        minLength: 6
        type: string
      user_id:
        type: string
    required:
    - password_new
    - password_old
    - user_id
    type: object
  response.RegisterQ:
    properties:
      password:
        minLength: 6
        type: string
      username:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /application/create:
    post:
      consumes:
      - application/json
      description: 用户可以申请认领自己的学者门户
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreateApplicationQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success": true, "application_id": submit.ApplicationID,
            "message": "申请提交成功", "status": 200}'
          schema:
            type: string
        "401":
          description: '{"success": false, "message": "申请创建失败", "status": 401}'
          schema:
            type: string
        "404":
          description: '{"success": false, "message": "没有该用户", "status": 404}'
          schema:
            type: string
        "405":
          description: '{"success": false, "message": "该作者已被认领", "status": 405, "the_authorname":
            the_submit.AuthorName}'
          schema:
            type: string
        "406":
          description: '{"success": false, "message": "您已经是认证学者，请勿重复申请", "status":
            406}'
          schema:
            type: string
      summary: Vera
      tags:
      - 管理
  /application/handle:
    post:
      consumes:
      - application/json
      description: 管理员对用户提交的申请进行审核，并给出审核意见content
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.HandleApplicationQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success": true, "message": "申请审批成功", "status": 200}'
          schema:
            type: string
        "401":
          description: '{"success": false, "message": "申请不存在", "status": 404}'
          schema:
            type: string
        "403":
          description: '{"success": false, "message": "success 不为true false", "status":
            403}'
          schema:
            type: string
        "405":
          description: '{"success": false, "message": "没有该用户", "status": 405}'
          schema:
            type: string
        "406":
          description: '{"success": false, "message": "已审核过该申请", "status": 406}'
          schema:
            type: string
      summary: Vera
      tags:
      - 管理
  /application/list:
    post:
      consumes:
      - application/json
      description: 显示未审核的申请列表
      produces:
      - application/json
      responses:
        "200":
          description: '{"success": true, "message": "获取成功", "status": 200, "submits":
            submits_arr, "submit_count": len(submits)}'
          schema:
            type: string
      summary: Vera
      tags:
      - 管理
  /es/get/:
    get:
      description: 根据id获取对象，可以是author，work，institution,venue,concept
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: '{"status":200,"res":{obeject}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"id type error"}'
          schema:
            type: string
        "404":
          description: '{"status":201,"msg":"es get err or not found"}'
          schema:
            type: string
      summary: txc
      tags:
      - esSearch
  /es/getAuthorRelationNet:
    get:
      description: |
        根据author的id获取专家关系网络, 目前会返回Top N的关系网，N=10，后续可以讨论修改N的大小或者传参给我

        目前接口时延约为1s, 后续考虑把计算出来的结果存入数据库，二次查询时延降低
      parameters:
      - description: author_id
        enum:
        - A2764814280
        - A2900471938
        - A2227665069
        in: query
        name: author_id
        required: true
        type: string
      responses:
        "200":
          description: '{"data":{ "Vertex_set":[], "Edge_set":[]}}'
          schema:
            $ref: '#/definitions/response.AuthorRelationNet'
        "201":
          description: '{"msg":"Get Author Relation Net Error"}'
          schema:
            type: string
      summary: hr
      tags:
      - esSearch
  /es/search/advanced:
    post:
      consumes:
      - application/json
      description: |-
        高级搜索，query是一个map列表， 每个map包含"content" "field" "logic"
        logic 仅包含["and", "or", "not"]
        field 仅包含["title", "abstract", "venue", "publisher", "author", "institution", "concept"]
        对于年份的筛选，在query里面 field是"publication_date" logic默认为and， 该map下有"begin" "end"分别是开始和结束
        sort=0为默认排序（降序） =1为按引用数降序 =2按发表日期由近到远
        asc=0为降序 =1为升序
        { "asc": false,"conds": {"venue":"International Journal for Research in Applied Science and Engineering Technology","author": "Zenith Nandy"},"page": 1,"query": [{"field": "title","content": "python","logic": "and"},{"field": "publication_date","begin": "2021-12-01","end":"2022-06-01","logic": "and"}],"size": 8,"sort": 0}
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AdvancedSearchQ'
      produces:
      - application/json
      responses: {}
      summary: txc
      tags:
      - esSearch
  /es/search/base:
    post:
      consumes:
      - application/json
      description: 基本搜索，Cond里面填筛选条件，key仅包含["type", "author", "institution", "publisher",
        "venue", "publication_year"]
      parameters:
      - description: 搜索条件
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.BaseSearchQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"res":{obeject}}'
          schema:
            type: string
        "201":
          description: '{"status":201,"err":"es search err"}'
          schema:
            type: string
      summary: txc
      tags:
      - esSearch
  /es/search/doi:
    post:
      description: 使用doi查找work，未测试，请勿使用
      parameters:
      - description: doi
        in: query
        name: doi
        required: true
        type: string
      responses: {}
      summary: txc
      tags:
      - esSearch
  /es/statistic:
    get:
      description: 获取统计信息
      responses:
        "200":
          description: '{"res":{}}'
          schema:
            type: string
        "301":
          description: '{"err":{}}'
          schema:
            type: string
      summary: txc
      tags:
      - esSearch
  /login:
    post:
      consumes:
      - application/json
      description: |-
        登录
        填入用户名和密码
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.LoginQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"登录成功","token": token,"ID": user.UserID}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户名不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":"密码错误"}'
          schema:
            type: string
      summary: ccf
      tags:
      - 用户
  /register:
    post:
      consumes:
      - application/json
      description: |-
        注册
        填入用户名和密码注册
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.RegisterQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"注册成功"}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户名已存在"}'
          schema:
            type: string
      summary: ccf
      tags:
      - 用户
  /scholar/concept:
    post:
      consumes:
      - application/json
      description: 添加user的关注关键词
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AddUserConceptQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"添加成功"}'
          schema:
            type: string
        "401":
          description: '{"msg":"用户不存在"}'
          schema:
            type: string
        "402":
          description: '{"msg":"concept不存在"}'
          schema:
            type: string
        "403":
          description: '{"msg":"添加失败"}'
          schema:
            type: string
        "404":
          description: '{"msg":"删除失败"}'
          schema:
            type: string
      summary: txc
      tags:
      - scholar
  /social/comment/create:
    post:
      consumes:
      - application/json
      description: 用户可以在某一篇文献的评论区中发表自己的评论
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentCreation'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"status":200,"msg":"评论创建成功","comment_id":string}'
          schema:
            type: string
        "400":
          description: '{"success":false,"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "403":
          description: '{"success":false,"status":403,"msg":"评论创建失败"}'
          schema:
            type: string
      summary: Vera
      tags:
      - 社交
  /social/comment/like:
    post:
      description: 用户可以对某一评论进行点赞
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentUser'
      responses:
        "200":
          description: '{"success": true,"status":200,"msg": "操作成功"}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "402":
          description: '{"success": false,"status":402, "msg": "用户已赞过该评论"}'
          schema:
            type: string
        "403":
          description: '{"success": false,"status":403, "msg": "评论不存在"}'
          schema:
            type: string
      summary: Vera
      tags:
      - 社交
  /social/comment/list:
    post:
      consumes:
      - application/json
      description: 显示文献评论列表，时间倒序
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentListQuery'
      produces:
      - application/json
      responses:
        "200":
          description: '{"data":{"comments":[],"paper_id":"string"},"message":"查找成功","status":
            200, "success": true}'
          schema:
            type: string
        "400":
          description: '{"status": 400, "msg": "用户ID不存在"}'
          schema:
            type: string
        "403":
          description: '{"success": false, "status":  403,"message": "评论不存在"}'
          schema:
            type: string
      summary: Vera
      tags:
      - 社交
  /social/comment/unlike:
    post:
      description: 取消点赞
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CommentUser'
      responses:
        "200":
          description: '{"success": true,"status":200,"msg": "已取消点赞"}'
          schema:
            type: string
        "400":
          description: '{"success": false,"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "402":
          description: '{"success": false,"status":402, "msg": "用户未点赞"}'
          schema:
            type: string
        "403":
          description: '{"success": false,"status":403, "msg": "评论不存在"}'
          schema:
            type: string
      summary: Vera
      tags:
      - 社交
  /social/follow:
    post:
      consumes:
      - application/json
      description: 关注学者 包括了关注和取消关注（通过重复调用来实现）
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.FollowAuthorQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "取消关注成功/关注成功"}'
          schema:
            type: string
        "400":
          description: '{"err":err,"msg": "参数错误"}'
          schema:
            type: string
      summary: txc
      tags:
      - 社交
  /social/follow/list:
    post:
      consumes:
      - application/json
      description: 获取用户关注的学者
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetUserFollowsQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "查找成功","data":data,"count":count}'
          schema:
            type: string
        "400":
          description: '{"err":err,"msg": "参数错误"}'
          schema:
            type: string
        "401":
          description: '{"msg": "用户ID不存在"}'
          schema:
            type: string
      summary: txc
      tags:
      - 社交
  /user/headshot:
    post:
      description: 上传用户头像
      parameters:
      - description: 用户ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: 新头像
        in: formData
        name: Headshot
        required: true
        type: file
      responses:
        "200":
          description: '{"status":200,"msg":"修改成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":"头像文件上传失败"}'
          schema:
            type: string
        "402":
          description: '{"status":402,"msg":"文件保存失败"}'
          schema:
            type: string
        "403":
          description: '{"status":403,"msg":"保存文件路径到数据库中失败"}'
          schema:
            type: string
      summary: ccf
      tags:
      - 用户
  /user/info:
    get:
      consumes:
      - application/json
      description: 查看用户个人信息
      parameters:
      - description: user_id
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"获取用户信息成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
      summary: ccf
      tags:
      - 用户
  /user/mod:
    post:
      consumes:
      - application/json
      description: 编辑用户信息
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"修改个人信息成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":err.Error()}'
          schema:
            type: string
      summary: ccf
      tags:
      - 用户
  /user/pwd:
    post:
      consumes:
      - application/json
      description: 编辑用户信息
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.PwdModifyQ'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"msg":"修改密码成功","data":{object}}'
          schema:
            type: string
        "400":
          description: '{"status":400,"msg":"用户ID不存在"}'
          schema:
            type: string
        "401":
          description: '{"status":401,"msg":"原密码输入错误"}'
          schema:
            type: string
        "402":
          description: '{"status":402,"msg":err1.Error()}'
          schema:
            type: string
      summary: ccf
      tags:
      - 用户
swagger: "2.0"
